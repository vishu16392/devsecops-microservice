name: CI/CD - build + static & image scanning

on:
  push:
    branches: [ main ]
  pull_request:

env:
  IMAGE: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}:${{ github.sha }}

jobs:
  semgrep:
    name: Static code analysis (Semgrep)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run Semgrep
        uses: returntocorp/semgrep-action@v1
        with:
          config: .semgrep.yml

  build-and-scan:
    name: Build image & container scan (Trivy)
    runs-on: ubuntu-latest
    needs: semgrep
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to registry (use CR_PAT secret or DOCKER credentials)
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}

      - name: Build image (load locally)
        uses: docker/build-push-action@v4
        with:
          context: .
          push: false
          tags: ${{ env.IMAGE }}
          load: true

      - name: Scan image with Trivy (fail on HIGH/CRITICAL)
        uses: aquasecurity/trivy-action@v0.10.1
        with:
          image-ref: ${{ env.IMAGE }}
          scan-type: image
          format: "table"
          severity: "HIGH,CRITICAL"
          exit-code: "1"

  iac-scan:
    name: IaC scan (tfsec)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run tfsec on infra/
        uses: aquasecurity/tfsec-action@v1
        with:
          directory: ./infra

  push:
    name: Push image to registry
    runs-on: ubuntu-latest
    needs: [build-and-scan, iac-scan]
    steps:
      - uses: actions/checkout@v4
      - name: Login to registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}
      - name: Push image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE }}
